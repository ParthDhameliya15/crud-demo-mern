[{"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\index.js":"1","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\App.js":"2","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\Router.js":"4","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\body.js":"5"},{"size":344,"mtime":1608283693594,"results":"6","hashOfConfig":"7"},{"size":9998,"mtime":1609135547855,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":456,"mtime":1608785472007,"results":"11","hashOfConfig":"7"},{"size":3811,"mtime":1609136634836,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"9fmnai",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pyb8ls",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\index.js",["26"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Router from \"./Router\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Router/>\n    </BrowserRouter>\n    ,document.getElementById(\"root\"));",["27","28"],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\App.js",["29","30","31","32","33","34"],"import React, {useState, useEffect} from 'react';\nimport axios from \"axios\"\n\nimport \"./App.css\"\nimport {Link} from \"react-router-dom\";\n\nconst hobyys = [\"football\", \"carrom\", \"basketball\", \"chess\"];\n\nfunction App(props) {\n    const [dynamic, setdynamic] = useState({});\n    const [title, settitle] = useState(\"crude in React\");\n    const [datas, setdatas] = useState([]);\n    const [hobby, sethobby] = useState([]);\n    const [isIndex, setisIndex] = useState(null);\n    const [searchValue, setsearchValue] = useState(\"\");\n    const [errors, seterrors] = useState({});\n    const [duplicate, setduplicate] = useState([]);\n\n    const handleOnChange = (e) => {\n        if (e.target.name === \"hobby\") {\n            let value = e.target.value;\n            if (e.target.checked) {\n                sethobby((prev) => [...prev, value]);\n            } else {\n                sethobby(hobby.filter(v => v !== value))\n                // sethobby(hobby);\n            }\n        } else {\n            setdynamic({...dynamic, [e.target.name]: e.target.value});\n        }\n    };\n\n    const validation = (name, value) => {\n        const numRegx = /^[0-9\\b]+$/;\n        switch (name) {\n            case (\"fullName\"):\n                if (!value) {\n                    return \"fullName is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"middleName\"):\n                if (!value) {\n                    return \"middal name is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"lastName\"):\n                if (!value) {\n                    return \"Last name is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"mobileNo\"):\n                if (!numRegx.test(value)) {\n                    return \"mobileNo is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"gender\"):\n                if (!value) {\n                    return \"gender is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"country\"):\n                if (!value) {\n                    return \"country is required\"\n                } else {\n                    return \"\"\n                }\n        }\n    };\n\n    const Table = () => {\n        props.history.push(\"/table\");\n    };\n\n    const mySubmit = () => {\n        let errors = {};\n        const data = {\n            fullName: dynamic.fullName,\n            middleName: dynamic.middleName,\n            lastName: dynamic.lastName,\n            mobileNo: dynamic.mobileNo,\n            gender: dynamic.gender,\n            country: dynamic.country,\n            hobby: hobby\n        };\n        Object.keys(data).forEach(key => {\n            const error = validation(key, data[key]);\n            if (error && error.length > 0) {\n                errors[key] = error;\n            }\n        });\n        if (Object.keys(errors).length > 0) {\n            seterrors(errors);\n            return\n        }\n        if (isIndex === null || !isIndex) {debugger\n            setdatas([...datas, data]);\n            setduplicate([...datas, data]);\n            axios.post('http://localhost:5000/users/create', data)\n                .then(res => {\n                console.log(\"data passd successfully\");\n                resetform();\n            })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n        } else {\n            axios.put(`http://localhost:5000/users/${isIndex}`, {dynamic,hobby}).then(res => {\n                console.log(\"data update successfully\");\n                resetform();\n            })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n        }\n\n    };\n\n    useEffect(() => {\n        resetform();\n        const id = props.match && props.match.params && props.match.params.id;\n        setisIndex(props.match.params.id);\n        if (id) {\n            axios.get(`http://localhost:5000/users/${id}`)\n                .then(res => {\n                    setdynamic(res.data);\n                    sethobby(res.data.hobby)\n                })\n                .catch(err => {\n                    console.log(err)\n                });\n        }\n    }, [props.match.params.id]);\n\n    const resetform = () => {\n        setdynamic({});\n        sethobby([]);\n        seterrors(\"\");\n        setisIndex(\"\");\n    };\n\n    return (\n        <div className={\"App\"} style={{margin: 10, marginLeft: 480}}>\n            {title}<br/>\n            <div className=\"input-group col-md-6\">\n                <span> <label>First Name:</label></span>\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 25}}/>\n                <input type=\"text\" className=\" formfiled\" name=\"fullName\" value={dynamic.fullName}\n                       placeholder=\"Enter Your First Name\"\n                       onChange={handleOnChange}/>\n                <span style={{color: \"red\"}}>{errors && errors.fullName}</span><br/><br/>\n            </div>\n            <div className=\"input-group col-md-6\">\n                <span> <label>Middle name:</label></span>\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 9}}/>\n                <input type=\"text\" className=\" formfiled\" name=\"middleName\" value={dynamic.middleName}\n                       placeholder=\"Enter Your Middle Name\"\n                       onChange={handleOnChange}/>\n                <span style={{color: \"red\"}}>{errors && errors.middleName}</span><br/><br/>\n            </div>\n            <div className=\"input-group col-md-6\">\n                <span> <label>Last name:</label></span>\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 32}}/>\n                <input type=\"text\" className=\" formfiled\" name=\"lastName\" value={dynamic.lastName}\n                       placeholder=\"Enter Your Last Name\"\n                       onChange={handleOnChange}/>\n                <span style={{color: \"red\"}}>{errors && errors.lastName}</span><br/><br/>\n            </div>\n            <div className=\"input-group col-md-6\">\n                <span> <label>Mobile No:</label></span>\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 31}}/>\n                <input type=\"tel\" className=\" formfiled\" name=\"mobileNo\" value={dynamic.mobileNo}\n                       placeholder=\"Enter Your Mobile Number\"\n                       onChange={handleOnChange}/>\n                <span style={{color: \"red\"}}>{errors && errors.mobileNo}</span><br/><br/>\n            </div>\n\n            <div className=\"center\"><h3>*select your gender</h3></div>\n            <div className=\"form-check\">\n                <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\n                        value=\"male\" checked={dynamic.gender === \"male\"} id=\"exampleRadios1\" onChange={handleOnChange}/></span>\n                <span><label className=\"form-check-label mr-3\" htmlFor=\"exampleRadios1\"> Male </label></span>\n            </div>\n            <div className=\"form-check\">\n            <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\n                                                    value=\"female\"\n                                                    checked={dynamic.gender === \"female\"} id=\"exampleRadios2\"\n                                                    onChange={handleOnChange}/></span>\n                <span><label className=\"form-check-label mr-3\" htmlFor=\"exampleRadios2\"> Female </label></span>\n            </div>\n            <div className=\"form-check\">\n            <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\n                                                    value=\"other\"\n                                                    checked={dynamic.gender === \"other\"} id=\"exampleRadios3\"\n                                                    onChange={handleOnChange}/></span>\n                <span><label className=\"form-check-label mr-3\" htmlFor=\"exampleRadios3\"> Other </label></span>\n            </div>\n            <span style={{color: \"red\"}}>{errors && errors.gender}</span>\n            <br/>\n\n\n            <h3 className=\" \">*select your country</h3>\n            <div className=\" \">\n                <label htmlFor=\"country\">Choose a country:</label>\n                <select name=\"country\" id=\"country\" onChange={handleOnChange}>\n                    <option value=\"\" selected={dynamic.country === \"\"}>select country</option>\n                    <option value=\"India\" selected={dynamic.country === \"India\"}>India</option>\n                    <option value=\"America\" selected={dynamic.country === \"America\"}>America</option>\n                    <option value=\"Russia\" selected={dynamic.country === \"Russia\"}>Russia</option>\n                    <option value=\"Canada\" selected={dynamic.country === \"Canada\"}>Canada</option>\n                </select>\n                <span style={{color: \"red\"}}>{errors && errors.country}</span><br/><br/>\n            </div>\n\n            <br/>\n\n            <h3>Hobby:</h3>\n            {\n                hobyys.map(value => (\n                        <div className=\"custom-control custom-checkbox\">\n                            <input type=\"checkbox\" name=\"hobby\" value={value}\n                                   checked={hobby.includes(value)} onChange={handleOnChange}/>\n                            <label htmlFor={value}>{value}</label><br/>\n                        </div>\n                    )\n                )\n            }\n\n            <br/><br/>\n            <Link to=\"/table\">Table</Link>\n            <button className=\"btn btn-primary\" onClick={mySubmit}>Submit</button>\n\n            <button className=\"btn btn-dark\" onClick={Table}>Show Table</button>\n            <br/><br/>\n\n        </div>\n    )\n\n}\n\n\nexport default App;\n","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\Router.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\body.js",[],{"ruleId":"35","severity":1,"message":"36","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":11},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"35","severity":1,"message":"43","line":11,"column":19,"nodeType":"37","messageId":"38","endLine":11,"endColumn":27},{"ruleId":"35","severity":1,"message":"44","line":15,"column":12,"nodeType":"37","messageId":"38","endLine":15,"endColumn":23},{"ruleId":"35","severity":1,"message":"45","line":15,"column":25,"nodeType":"37","messageId":"38","endLine":15,"endColumn":39},{"ruleId":"35","severity":1,"message":"46","line":17,"column":12,"nodeType":"37","messageId":"38","endLine":17,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":35,"column":9,"nodeType":"49","messageId":"50","endLine":72,"endColumn":10},{"ruleId":"51","severity":1,"message":"52","line":137,"column":8,"nodeType":"53","endLine":137,"endColumn":31,"suggestions":"54"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'settitle' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'setsearchValue' is assigned a value but never used.","'duplicate' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [props.match, props.match.params.id]",{"range":"60","text":"61"},[4270,4293],"[props.match, props.match.params.id]"]