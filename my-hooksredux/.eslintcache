[{"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\index.js":"1","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\App.js":"2","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\Router.js":"4","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\body.js":"5","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\index.js":"6","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\App.js":"7","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\Router.js":"8","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\component\\userContainer.js":"9","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\component\\UserBody.js":"10","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\component\\userBody.js":"11","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\store.js":"12","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\user\\userReducer.js":"13","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\user\\userType.js":"14","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\index.js":"15","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\user\\userAction.js":"16"},{"size":344,"mtime":1608283693594,"results":"17","hashOfConfig":"18"},{"size":10336,"mtime":1608720819117,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":469,"mtime":1608730349712,"results":"22","hashOfConfig":"18"},{"size":3814,"mtime":1608730569117,"results":"23","hashOfConfig":"18"},{"size":319,"mtime":1608791952147,"results":"24","hashOfConfig":"25"},{"size":215,"mtime":1608885261419,"results":"26","hashOfConfig":"25"},{"size":599,"mtime":1608885261468,"results":"27","hashOfConfig":"25"},{"size":11090,"mtime":1609147116463,"results":"28","hashOfConfig":"25"},{"size":3817,"mtime":1608793997551,"results":"29","hashOfConfig":"25"},{"size":3993,"mtime":1609147116508,"results":"30","hashOfConfig":"25"},{"size":238,"mtime":1609140901301,"results":"31","hashOfConfig":"25"},{"size":1058,"mtime":1609130783657,"results":"32","hashOfConfig":"25"},{"size":160,"mtime":1608898110473,"results":"33","hashOfConfig":"25"},{"size":48,"mtime":1608809280071,"results":"34","hashOfConfig":"25"},{"size":672,"mtime":1608913246214,"results":"35","hashOfConfig":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"9fmnai",{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pyb8ls",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6lwko0",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\index.js",["77"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Router from \"./Router\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Router/>\n    </BrowserRouter>\n    ,document.getElementById(\"root\"));",["78","79"],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\App.js",["80","81","82","83","84","85"],"import React, {useState, useEffect} from 'react';\nimport axios from \"axios\"\n\nimport \"./App.css\"\nimport {Link} from \"react-router-dom\";\n\n\nconst hobyys = [\"football\", \"carrom\", \"basketball\", \"chess\"];\n\nfunction App(props) {\n    const [dynamic, setdynamic] = useState({});\n    const [title, settitle] = useState(\"crude in React\");\n    const [datas, setdatas] = useState([]);\n    const [hobby, sethobby] = useState([]);\n    const [isIndex, setisIndex] = useState(null);\n    const [searchValue, setsearchValue] = useState(\"\");\n    const [errors, seterrors] = useState({});\n    const [duplicate, setduplicate] = useState([]);\n\n    // useEffect(async() => {\n    //   await getData()\n    // },[])\n\n    // const getData = () => {debugger\n    //     axios.get(\"http://localhost:5000/users/get\")\n    //         .then(res =>\n    //                console.log(\"hiii\", res)\n    //         )\n    //         .catch(err =>\n    //         console.log(\"err\", err))\n    // }\n\n    const handleOnChange = (e) => {\n        if (e.target.name === \"hobby\") {\n            let value = e.target.value;\n            if (e.target.checked) {\n                sethobby((prev) => [...prev, value]);\n            } else {\n                sethobby(hobby.filter(v => v !== value))\n                // sethobby(hobby);\n            }\n        } else {\n            setdynamic({...dynamic, [e.target.name]: e.target.value});\n        }\n    };\n\n    const validation = (name, value) => {\n        const numRegx = /^[0-9\\b]+$/;\n        switch (name) {\n            case (\"fullName\"):\n                if (!value) {\n                    return \"fullName is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"middleName\"):\n                if (!value) {\n                    return \"middal name is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"lastName\"):\n                if (!value) {\n                    return \"Last name is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"mobileNo\"):\n                if (!numRegx.test(value)) {\n                    return \"mobileNo is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"gender\"):\n                if (!value) {\n                    return \"gender is required\"\n                } else {\n                    return \"\"\n                }\n            case (\"country\"):\n                if (!value) {\n                    return \"country is required\"\n                } else {\n                    return \"\"\n                }\n        }\n    };\n\n    const Table = () => {\n        props.history.push(\"/table\");\n    };\n\n    const mySubmit = () => {\n        let errors = {};\n        const data = {\n            fullName: dynamic.fullName,\n            middleName: dynamic.middleName,\n            lastName: dynamic.lastName,\n            mobileNo: dynamic.mobileNo,\n            gender: dynamic.gender,\n            country: dynamic.country,\n            hobby: hobby\n        };\n        Object.keys(data).forEach(key => {\n            const error = validation(key, data[key]);\n            if (error && error.length > 0) {\n                errors[key] = error;\n            }\n        });\n        if (Object.keys(errors).length > 0) {\n            seterrors(errors);\n            return\n        }\n        if (isIndex === null || !isIndex) {debugger\n            setdatas([...datas, data]);\n            setduplicate([...datas, data]);\n            axios.post('http://localhost:5000/users/create', data).then(res => {\n                console.log(\"data passd successfully\");\n                resetform();\n            })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n        } else {\n            axios.put(`http://localhost:5000/users/${isIndex}`, dynamic).then(res => {\n                console.log(\"data update successfully\");\n                resetform();\n            })\n                .catch(err => {\n                    console.log(\"error\")\n                })\n        }\n\n    };\n\n    useEffect(() => {\n        resetform();\n        const id = props.match && props.match.params && props.match.params.id;\n        setisIndex(props.match.params.id);\n        if (id) {\n            axios.get(`http://localhost:5000/users/${id}`)\n                .then(res => {\n                    setdynamic(res.data);\n                    sethobby(res.data.hobby)\n                })\n                .catch(err => {\n                    console.log(err)\n                });\n        }\n    }, [props.match.params.id]);\n\n    const resetform = () => {\n        setdynamic({});\n        sethobby([]);\n        seterrors(\"\");\n        setisIndex(\"\");\n    };\n\n    return (\n        <div className={\"App\"} style={{margin: 10, marginLeft: 480}}>\n            {title}<br/>\n            <div className=\"input-group col-md-6\">\n                <span> <label>First Name:</label></span>\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 25}}/>\n                <input type=\"text\" className=\" formfiled\" name=\"fullName\" value={dynamic.fullName}\n                       placeholder=\"Enter Your First Name\"\n                       onChange={handleOnChange}/>\n                <span style={{color: \"red\"}}>{errors && errors.fullName}</span><br/><br/>\n            </div>\n            <div className=\"input-group col-md-6\">\n                <span> <label>Middle name:</label></span>\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 9}}/>\n                <input type=\"text\" className=\" formfiled\" name=\"middleName\" value={dynamic.middleName}\n                       placeholder=\"Enter Your Middle Name\"\n                       onChange={handleOnChange}/>\n                <span style={{color: \"red\"}}>{errors && errors.middleName}</span><br/><br/>\n            </div>\n            <div className=\"input-group col-md-6\">\n                <span> <label>Last name:</label></span>\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 32}}/>\n                <input type=\"text\" className=\" formfiled\" name=\"lastName\" value={dynamic.lastName}\n                       placeholder=\"Enter Your Last Name\"\n                       onChange={handleOnChange}/>\n                <span style={{color: \"red\"}}>{errors && errors.lastName}</span><br/><br/>\n            </div>\n            <div className=\"input-group col-md-6\">\n                <span> <label>Mobile No:</label></span>\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 31}}/>\n                <input type=\"tel\" className=\" formfiled\" name=\"mobileNo\" value={dynamic.mobileNo}\n                       placeholder=\"Enter Your Mobile Number\"\n                       onChange={handleOnChange}/>\n                <span style={{color: \"red\"}}>{errors && errors.mobileNo}</span><br/><br/>\n            </div>\n\n            <div className=\"center\"><h3>*select your gender</h3></div>\n\n            <div className=\"form-check\">\n            <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\n                                                    value=\"male\"\n                                                    checked={dynamic.gender === \"male\"} id=\"male\"\n                                                    onChange={handleOnChange}/></span>\n                <span><label className=\"form-check-label mr-3\"> Male </label></span>\n            </div>\n            <div className=\"form-check\">\n            <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\n                                                    value=\"female\"\n                                                    checked={dynamic.gender === \"female\"} id=\"female\"\n                                                    onChange={handleOnChange}/></span>\n                <span><label className=\"form-check-label mr-3\"> Female </label></span>\n            </div>\n            <div className=\"form-check\">\n            <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\n                                                    value=\"other\"\n                                                    checked={dynamic.gender === \"other\"} id=\"other\"\n                                                    onChange={handleOnChange}/></span>\n                <span><label className=\"form-check-label mr-3\"> Other </label></span>\n            </div>\n            <span style={{color: \"red\"}}>{errors && errors.gender}</span>\n            <br/>\n\n\n            <h3 className=\" \">*select your country</h3>\n            <div className=\" \">\n                <label htmlFor=\"country\">Choose a country:</label>\n                <select name=\"country\" id=\"country\" onChange={handleOnChange}>\n                    <option value=\"\" selected={dynamic.country === \"\"}>select country</option>\n                    <option value=\"India\" selected={dynamic.country === \"India\"}>India</option>\n                    <option value=\"America\" selected={dynamic.country === \"America\"}>America</option>\n                    <option value=\"Russia\" selected={dynamic.country === \"Russia\"}>Russia</option>\n                    <option value=\"Canada\" selected={dynamic.country === \"Canada\"}>Canada</option>\n                </select>\n                <span style={{color: \"red\"}}>{errors && errors.country}</span><br/><br/>\n            </div>\n\n            <br/>\n\n            <h3>Hobby:</h3>\n            {\n                hobyys.map(value => (\n                        <div className=\"custom-control custom-checkbox\">\n                            <input type=\"checkbox\" name=\"hobby\" value={value}\n                                   checked={hobby.includes(value)} onChange={handleOnChange}/>\n                            <label htmlFor={value}>{value}</label><br/>\n                        </div>\n                    )\n                )\n            }\n\n            <br/><br/>\n            <Link to=\"/table\">Table</Link>\n            <button className=\"btn btn-primary\" onClick={mySubmit}>Submit</button>\n\n            <button className=\"btn btn-dark\" onClick={Table}>Show Table</button>\n            <br/><br/>\n\n        </div>\n    )\n\n}\n\n\nexport default App;\n","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\Router.js",["86"],"import  React, {Component} from 'react';\r\nimport {Switch,Route} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Body from \"./body\";\r\n\r\nfunction Router(){\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact={true} path=\"/\" component={App}/>\r\n                <Route path=\"/table\" component={Body}/>\r\n                <Route path=\"/edit/:id\" component={App}/>\r\n            </Switch>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Router;","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooks\\src\\body.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\index.js",[],["87","88"],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\App.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\Router.js",["89"],"import  React, {Component} from 'react';\r\nimport {Switch,Route} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport UserBody from \"./component/userBody\";\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nconst Router = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Switch>\r\n                <Route exact={true} path=\"/\" component={App}/>\r\n                <Route path=\"/table\" component={UserBody}/>\r\n                <Route path=\"/edit/:id\" component={App}/>\r\n            </Switch>\r\n        </Provider>\r\n    );\r\n\r\n};\r\n\r\nexport default Router;","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\component\\userContainer.js",["90","91","92","93","94","95","96","97"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport \"../App.css\"\r\nimport {userDetails} from \"../redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {userEdit, userUpdate} from \"../redux/user/userAction\";\r\n\r\n\r\nconst hobyys = [\"football\", \"carrom\", \"basketball\", \"chess\"];\r\n\r\nconst UserContainer = (props) => {\r\n    const {editUserData} = props;\r\n    const [dynamic, setdynamic] = useState(editUserData || {});\r\n    const [title, settitle] = useState(\"crude in React\");\r\n    const [datas, setdatas] = useState([]);\r\n    const [hobby, sethobby] = useState([]);\r\n    const [isIndex, setisIndex] = useState(\"\");\r\n    const [searchValue, setsearchValue] = useState(\"\");\r\n    const [errors, seterrors] = useState({});\r\n    const [duplicate, setduplicate] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        await getData()\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        axios.get(\"http://localhost:5000/users/get\")\r\n            .then(res =>\r\n                console.log(\"hiii\", res)\r\n            )\r\n            .catch(err =>\r\n                console.log(\"err\", err))\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        if (e.target.name === \"hobby\") {\r\n            debugger\r\n            let value = e.target.value;\r\n            if (e.target.checked) {\r\n                sethobby((prev) => [...prev, value]);\r\n            } else {\r\n                sethobby(hobby.filter(v => v !== value))\r\n                // sethobby(hobby);\r\n            }\r\n            console.log(hobby)\r\n        } else {\r\n            setdynamic({...dynamic, [e.target.name]: e.target.value});\r\n        }\r\n    };\r\n\r\n    const validation = (name, value) => {\r\n        const numRegx = /^[0-9\\b]+$/;\r\n        switch (name) {\r\n            case (\"fullName\"):\r\n                if (!value) {\r\n                    return \"fullName is required\"\r\n                } else {\r\n                    return \"\"\r\n                }\r\n            case (\"middleName\"):\r\n                if (!value) {\r\n                    return \"middal name is required\"\r\n                } else {\r\n                    return \"\"\r\n                }\r\n            case (\"lastName\"):\r\n                if (!value) {\r\n                    return \"Last name is required\"\r\n                } else {\r\n                    return \"\"\r\n                }\r\n            case (\"mobileNo\"):\r\n                if (!numRegx.test(value)) {\r\n                    return \"mobileNo is required\"\r\n                } else {\r\n                    return \"\"\r\n                }\r\n            case (\"gender\"):\r\n                if (!value) {\r\n                    return \"gender is required\"\r\n                } else {\r\n                    return \"\"\r\n                }\r\n            case (\"country\"):\r\n                if (!value) {\r\n                    return \"country is required\"\r\n                } else {\r\n                    return \"\"\r\n                }\r\n        }\r\n    };\r\n\r\n    const Table = () => {\r\n        props.history.push(\"/table\");\r\n    };\r\n\r\n    const mySubmit = () => {\r\n        let errors = {};\r\n        const data = {\r\n            fullName: dynamic.fullName,\r\n            middleName: dynamic.middleName,\r\n            lastName: dynamic.lastName,\r\n            mobileNo: dynamic.mobileNo,\r\n            gender: dynamic.gender,\r\n            country: dynamic.country,\r\n            hobby: hobby\r\n        };\r\n        Object.keys(data).forEach(key => {\r\n            const error = validation(key, data[key]);\r\n            if (error && error.length > 0) {\r\n                errors[key] = error;\r\n            }\r\n        });\r\n        if (Object.keys(errors).length > 0) {\r\n            seterrors(errors);\r\n            return\r\n        }\r\n        console.log(\"index\", isIndex);\r\n        if (isIndex === \"\") {\r\n            debugger\r\n            setdatas([...datas, data]);\r\n            setduplicate([...datas, data]);\r\n\r\n            dynamic.hobby = hobby;\r\n            console.log(\"1\", dynamic);\r\n            props.dispatch(userDetails(dynamic));\r\n            axios.post('http://localhost:5000/users/create', dynamic).then(res => {\r\n                console.log(\"data passed successfully\");\r\n            })\r\n                .catch(err => {\r\n                    console.log(\"error\")\r\n                })\r\n        } else {\r\n            debugger\r\n            dynamic.hobby = hobby;\r\n            props.list[isIndex] = data;\r\n            props.dispatch(userUpdate(props.list, isIndex));\r\n            console.log(\"2\", dynamic)\r\n        }\r\n        resetform();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        resetform();\r\n        const id = props.match && props.match.params && props.match.params.id;\r\n        if (id) {\r\n            setisIndex(parseInt(id));\r\n            props.dispatch(userEdit(parseInt(id)));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        setdynamic(props.editUserData);\r\n        console.log(\"111111\", props.editUserData);\r\n        props.editUserData && props.editUserData.hobby && sethobby(props.editUserData.hobby);\r\n    }, [props.editUserData]);\r\n\r\n    const resetform = () => {\r\n        setdynamic({});\r\n        sethobby([]);\r\n        seterrors(\"\");\r\n        setisIndex(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className={\"App\"} style={{margin: 10, marginLeft: 480}}>\r\n            {title}<br/>\r\n            <div className=\"input-group col-md-6\">\r\n                <span> <label>First Name:</label></span>\r\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 25}}/>\r\n                <input type=\"text\" className=\" formfiled\" name=\"fullName\" value={dynamic.fullName}\r\n                       placeholder=\"Enter Your First Name\"\r\n                       onChange={handleOnChange}/>\r\n                <span style={{color: \"red\"}}>{errors && errors.fullName}</span><br/><br/>\r\n            </div>\r\n            <div className=\"input-group col-md-6\">\r\n                <span> <label>Middle name:</label></span>\r\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 9}}/>\r\n                <input type=\"text\" className=\" formfiled\" name=\"middleName\" value={dynamic.middleName}\r\n                       placeholder=\"Enter Your Middle Name\"\r\n                       onChange={handleOnChange}/>\r\n                <span style={{color: \"red\"}}>{errors && errors.middleName}</span><br/><br/>\r\n            </div>\r\n            <div className=\"input-group col-md-6\">\r\n                <span> <label>Last name:</label></span>\r\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 32}}/>\r\n                <input type=\"text\" className=\" formfiled\" name=\"lastName\" value={dynamic.lastName}\r\n                       placeholder=\"Enter Your Last Name\"\r\n                       onChange={handleOnChange}/>\r\n                <span style={{color: \"red\"}}>{errors && errors.lastName}</span><br/><br/>\r\n            </div>\r\n            <div className=\"input-group col-md-6\">\r\n                <span> <label>Mobile No:</label></span>\r\n                <span className=\"glyphicon glyphicon-user input-group-text\" style={{marginLeft: 31}}/>\r\n                <input type=\"tel\" className=\" formfiled\" name=\"mobileNo\" value={dynamic.mobileNo}\r\n                       placeholder=\"Enter Your Mobile Number\"\r\n                       onChange={handleOnChange}/>\r\n                <span style={{color: \"red\"}}>{errors && errors.mobileNo}</span><br/><br/>\r\n            </div>\r\n\r\n            <div className=\"center\"><h3>*select your gender</h3></div>\r\n\r\n            <div className=\"form-check\">\r\n            <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\r\n                                                    value=\"male\"\r\n                                                    checked={dynamic.gender === \"male\"} id=\"male\"\r\n                                                    onChange={handleOnChange}/></span>\r\n                <span><label className=\"form-check-label mr-3\"> Male </label></span>\r\n            </div>\r\n            <div className=\"form-check\">\r\n            <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\r\n                                                    value=\"female\"\r\n                                                    checked={dynamic.gender === \"female\"} id=\"female\"\r\n                                                    onChange={handleOnChange}/></span>\r\n                <span><label className=\"form-check-label mr-3\"> Female </label></span>\r\n            </div>\r\n            <div className=\"form-check\">\r\n            <span style={{marginRight: 18}}> <input className=\"form-check-input mr-3\" type=\"radio\" name=\"gender\"\r\n                                                    value=\"other\"\r\n                                                    checked={dynamic.gender === \"other\"} id=\"other\"\r\n                                                    onChange={handleOnChange}/></span>\r\n                <span><label className=\"form-check-label mr-3\"> Other </label></span>\r\n            </div>\r\n            <span style={{color: \"red\"}}>{errors && errors.gender}</span>\r\n            <br/>\r\n\r\n\r\n            <h3 className=\" \">*select your country</h3>\r\n            <div className=\" \">\r\n                <label htmlFor=\"country\">Choose a country:</label>\r\n                <select name=\"country\" id=\"country\" onChange={handleOnChange}>\r\n                    <option value=\"\" selected={dynamic.country === \"\"}>select country</option>\r\n                    <option value=\"India\" selected={dynamic.country === \"India\"}>India</option>\r\n                    <option value=\"America\" selected={dynamic.country === \"America\"}>America</option>\r\n                    <option value=\"Russia\" selected={dynamic.country === \"Russia\"}>Russia</option>\r\n                    <option value=\"Canada\" selected={dynamic.country === \"Canada\"}>Canada</option>\r\n                </select>\r\n                <span style={{color: \"red\"}}>{errors && errors.country}</span><br/><br/>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <h3>Hobby:</h3>\r\n            {\r\n                hobyys.map(value => (\r\n                        <div className=\"custom-control custom-checkbox\">\r\n                            <input type=\"checkbox\" name=\"hobby\" value={value}\r\n                                   checked={hobby.includes(value)} onChange={handleOnChange}/>\r\n                            <label htmlFor={value}>{value}</label><br/>\r\n                        </div>\r\n                    )\r\n                )\r\n            }\r\n\r\n            <br/><br/>\r\n            <Link to=\"/table\">Table</Link>\r\n            <button className=\"btn btn-primary\" onClick={mySubmit}>Submit</button>\r\n\r\n            <button className=\"btn btn-dark\" onClick={Table}>Show Table</button>\r\n\r\n            <br/><br/>\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        list: state.data,\r\n        editUserData: state.editUserData\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserContainer);\r\n","C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\component\\UserBody.js",["98","99","100","101"],"import React, {useState,useEffect} from 'react';\r\nimport axios from \"axios\"\r\n\r\nconst UserBody = (props) => {\r\n    const[datas,setdatas]=useState([]);\r\n    const[duplicate,setduplicate]=useState([]);\r\n    const[searchValue,setsearchValue]=useState(\"\");\r\n\r\n    useEffect(()=>{debugger\r\n        getData()\r\n    },[]);\r\n\r\n    const getData = () => {\r\n        axios.get(\"http://localhost:5000/users/get\")\r\n            .then(res => {\r\n                setdatas(res.data);\r\n                setduplicate(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error\")\r\n            })\r\n    };\r\n\r\n    const myEdit =(id) => {\r\n        props.history.push(`/edit/${id}`)\r\n    };\r\n\r\n    const myDelete = (id) => {\r\n        axios.put(`http://localhost:5000/users/delete/${id}`)\r\n            .then(res => {\r\n                if (res.data && res.data.success){\r\n                    getData()\r\n                }\r\n                console.log(\"deleted succefully\", res)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    };\r\n\r\n    const BackToHome = () => {\r\n        props.history.push(\"/\");\r\n    };\r\n\r\n    const handleOnChange = (e) =>{\r\n        setsearchValue(e.target.value);\r\n    };\r\n\r\n    const SearchSubmit = () => {debugger\r\n        if (!searchValue) {\r\n            setdatas(duplicate);\r\n        } else {debugger\r\n            const searchData = duplicate.filter(value => {\r\n                return value.fname.includes(searchValue)\r\n            });\r\n            setdatas(searchData);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return(\r\n        <>\r\n            <input type=\"text\" name=\"searchValue\" className=\"formfiled\" placeholder=\"your search fname\"\r\n                   onChange={handleOnChange}/>\r\n            <button className=\"btn btn-primary\"  onClick={SearchSubmit}>Search</button>\r\n            <br/><br/>\r\n\r\n            <table align=\"center\" border=\" border: 1px solid black\" width=\"100%\" className=\"table table-striped\">\r\n                <thead>\r\n                <tr>\r\n                    <th>First Name</th>\r\n                    <th>Middle Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Mobile No.</th>\r\n                    <th>Gender</th>\r\n                    <th>Country</th>\r\n                    <th>Hobby</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                <>{\r\n                    Array.isArray(datas)  && datas.map((item,i) =>(\r\n                        <tr>\r\n                            <td>{i+1}.{item.fullName}</td>\r\n                            <td>{item.middleName}</td>\r\n                            <td>{item.lastName}</td>\r\n                            <td>{item.mobileNo}</td>\r\n                            <td>{item.gender}</td>\r\n                            <td>{item.country}</td>\r\n                            <td>{item.hobby}</td>\r\n                            <td> <button onClick = {() => {myEdit(item._id)}} className=\"myEdit btn btn-dark mr-2\">Edit</button>\r\n                                <button onClick= {() => {myDelete(item._id)}} className=\"myDelete  btn btn-dark \">Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                    {\r\n                        <button onClick = {() => BackToHome()} className=\"myEdit btn btn-dark mr-2\">Back To Home</button>\r\n                    }\r\n\r\n                </>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default UserBody;",["102","103"],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\component\\userBody.js",["104","105","106"],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\store.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\user\\userType.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\index.js",[],"C:\\Users\\pc\\WebstormProjects\\Crudreact\\my-hooksredux\\src\\redux\\user\\userAction.js",[],{"ruleId":"107","severity":1,"message":"108","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":11},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"107","severity":1,"message":"115","line":12,"column":19,"nodeType":"109","messageId":"110","endLine":12,"endColumn":27},{"ruleId":"107","severity":1,"message":"116","line":16,"column":12,"nodeType":"109","messageId":"110","endLine":16,"endColumn":23},{"ruleId":"107","severity":1,"message":"117","line":16,"column":25,"nodeType":"109","messageId":"110","endLine":16,"endColumn":39},{"ruleId":"107","severity":1,"message":"118","line":18,"column":12,"nodeType":"109","messageId":"110","endLine":18,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":49,"column":9,"nodeType":"121","messageId":"122","endLine":86,"endColumn":10},{"ruleId":"123","severity":1,"message":"124","line":150,"column":8,"nodeType":"125","endLine":150,"endColumn":31,"suggestions":"126"},{"ruleId":"107","severity":1,"message":"127","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"111","replacedBy":"128"},{"ruleId":"113","replacedBy":"129"},{"ruleId":"107","severity":1,"message":"127","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"130","line":13,"column":25,"nodeType":"109","messageId":"110","endLine":13,"endColumn":29},{"ruleId":"107","severity":1,"message":"115","line":16,"column":19,"nodeType":"109","messageId":"110","endLine":16,"endColumn":27},{"ruleId":"107","severity":1,"message":"116","line":20,"column":12,"nodeType":"109","messageId":"110","endLine":20,"endColumn":23},{"ruleId":"107","severity":1,"message":"117","line":20,"column":25,"nodeType":"109","messageId":"110","endLine":20,"endColumn":39},{"ruleId":"107","severity":1,"message":"118","line":22,"column":12,"nodeType":"109","messageId":"110","endLine":22,"endColumn":21},{"ruleId":"123","severity":1,"message":"131","line":24,"column":15,"nodeType":"132","endLine":26,"endColumn":6},{"ruleId":"119","severity":1,"message":"120","line":55,"column":9,"nodeType":"121","messageId":"122","endLine":92,"endColumn":10},{"ruleId":"123","severity":1,"message":"133","line":158,"column":8,"nodeType":"125","endLine":158,"endColumn":10,"suggestions":"134"},{"ruleId":"135","severity":2,"message":"136","line":5,"column":27,"nodeType":"109","endLine":5,"endColumn":35},{"ruleId":"135","severity":2,"message":"136","line":6,"column":35,"nodeType":"109","endLine":6,"endColumn":43},{"ruleId":"135","severity":2,"message":"136","line":7,"column":39,"nodeType":"109","endLine":7,"endColumn":47},{"ruleId":"135","severity":2,"message":"137","line":9,"column":5,"nodeType":"109","endLine":9,"endColumn":14},{"ruleId":"111","replacedBy":"138"},{"ruleId":"113","replacedBy":"139"},{"ruleId":"107","severity":1,"message":"140","line":4,"column":9,"nodeType":"109","messageId":"110","endLine":4,"endColumn":20},{"ruleId":"107","severity":1,"message":"141","line":10,"column":11,"nodeType":"109","messageId":"110","endLine":10,"endColumn":15},{"ruleId":"107","severity":1,"message":"142","line":11,"column":12,"nodeType":"109","messageId":"110","endLine":11,"endColumn":17},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'settitle' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'setsearchValue' is assigned a value but never used.","'duplicate' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'Component' is defined but never used.",["143"],["144"],"'list' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["146"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"userBody\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"userBody\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.",["143"],["144"],"'userDetails' is defined but never used.","'data' is assigned a value but never used.","'datas' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [props.match, props.match.params.id]",{"range":"151","text":"152"},"Update the dependencies array to be: [props]",{"range":"153","text":"154"},[4581,4604],"[props.match, props.match.params.id]",[5085,5087],"[props]"]